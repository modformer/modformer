# Global

# Global data will be available to all modules as part of the pipeline.

# The name of the site for display and content purposes.
name = "My Example Site"

# The base URL for constructing fully-qualified links where required.
base_url = "https://example.com"

# ==============================================================================

# Pipeline

# Configuration for the overall pipeline, applicable to all (Read, Transform,
# Write) stages.
[pipeline]

# The directory containing installed modules (this path will be searched for
# required modules as defined within the pipeline stages).
#
# Optional - default: "./modules"
module_path = "../../target/wasm32-wasi/debug/"

# ------------------------------------------------------------------------------

# Pipeline Read

# Configuration of the Read stage of the pipeline, including data mapping and
# pipeline stage modules.
[pipeline.read]

# The directory containing content data (this will be made available under the
# "content" mapped directory to all Read stage modules). This is expected to be
# public content after transformation, with the exception of configuration
# files, etc.
content_path = "./input/content"

# The directory containing input data (this will be made available under the
# "data" mapped directory to all Read stage modules). This is not expected to be
# public content, but may be used as a source of data to enrich the public
# content by modules configured to do so.
data_path = "./input/data"

# Pipeline Read Modules

# Definition and configuration of the modules invoked sequentially as part of
# the Read stage, where each module has some common definition, plus optional
# configuration. The configuration, if provided, will be passed to the module
# at runtime as a JSON value.

# Modules defined as being part of the Read stage are expected to expose a
# "read" method with a suitable signature.

[[pipeline.read.modules]]

# The name of the module to instantiate and invoke (this will be sought within
# the module path as defined at the pipeline level, with a filename of
# <module>.wasm).
module = "modformer_fs_reader"

# The WASI status of the module - if the module is compiled against a WASI
# profile, and can run in a sandbox, setting this to true will provide the
# module with a suitably configured WASI context. For modules which are not
# WASI compatible due to requirements for resource usage currently outside the
# WASI specification, setting this to false will result in the module being run
# in an effectively "trusted" mode without access restrictions to host
# resources.
#
# Optional - default: true
sandbox = true

# The implementation of the module - native modules (assumed to be built using
# Rust) will be passed data using bincode serialization of the JSON data
# structure rather than text encoding, to improve performance. Modules which
# are not implemented in Rust will be passed data using UTF-8 encoded JSON.
#
# Optional - default: true
native = true

# Configuration of the module defined above (forming a sub-table within the
# module definition). This configuration will be passed to the module at runtime
# as a JSON value. For specific configuration options and capabilities of the
# modules that follow, consult the individual module documentation.
[pipeline.read.modules.config]
text_files = [ # optional - default: []
    "*.js",
    "*.json",
    "*.md",
    "*.sass",
    "*.toml",
    "*.xml",
]

# ------------------------------------------------------------------------------

# Pipeline Transform

[pipeline.transform]

[[pipeline.transform.modules]]

# ------------------------------------------------------------------------------

# Pipeline Write

[pipeline.write]
output_path = "./output"

[[pipeline.write.modules]]
module = "modformer_fs_writer"
native = true

[pipeline.write.modules.config]
exclude_files = []